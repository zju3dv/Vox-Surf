general {
    base_exp_dir = ./exp/CASE_NAME/wmask_vox
    recording = [
        ./,
        ./models
    ]
}

dataset {
    data_dir = ./data/CASE_NAME/preprocessed/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
}

train {
    learning_rate = 1e-3
    learning_rate_alpha = 0.01
    end_iter = 400000

    batch_size = 512
    validate_resolution_level = 4
    warm_up_end = 5000 
    anneal_end = 0
    use_white_bkgd = False

    save_freq = 10000
    val_freq = 2500
    val_mesh_freq = 5000
    report_freq = 100

    igr_weight = 0.2
    mask_weight = 0.1
}

voxel {
    init_voxel_size = 0.8
    raymarching_step_ratio = 0.04
    max_voxel_hits = 40
    voxel_embedding_dim = 16
}

model {
    # nerf {
    #     D = 8,
    #     d_in = 4,
    #     d_in_view = 3,
    #     W = 256,
    #     multires = 10,
    #     multires_view = 4,
    #     output_ch = 4,
    #     skips=[4],
    #     use_viewdirs=True
    # }

    sdf_network {
        # d_in = 32
        d_out = 1 # sdf
        d_hidden = 128
        n_layers = 4
        skip_in = []
        multires = 4
        bias = 0.5
        scale = 1.0
        geometric_init = False
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        # d_feature = 256
        mode = no_normal
        # d_in = 35
        d_out = 3
        d_hidden = 128
        n_layers = 4
        weight_norm = True
        multires_view = 8
        squeeze_out = True
    }

    neus_renderer {
        n_samples = 64
        n_importance = 0
        n_outside = 0
        up_sample_steps = 4     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
    }
}
